# import pprint
import numpy as np
from numpy.typing import NDArray

import spmac.solver.multiple


def test_multiple():
    params = {
        "beta": 100,
        "num_flavor": 2,
        "num_omega": 101,
        "min_omega": -4,
        "max_omega": 4,
        "min_sv": 1e-12,
    }
    solver = spmac.solver.multiple.Solver(params, Gtau=Gtau())
    lambda_ = 1.0e-6
    opt = solver.solve_one(lambda_)
    rho = np.real(solver.predict_rho(opt.x[0]))
    # pprint.pprint(rho)
    np.testing.assert_array_almost_equal(rho, rho_ref())


def Gtau() -> NDArray[np.float64]:
    G00 = [
        -0.20429786542090964,
        -0.06565563775677967,
        -0.05717663489401155,
        -0.05466723228192395,
        -0.05380687167765447,
        -0.05357033452122967,
        -0.05352238167464908,
        -0.053280153450130534,
        -0.05329411773977615,
        -0.05352029635800533,
        -0.0530889933442739,
        -0.05322816036112888,
        -0.05340616226912414,
        -0.05325482290292857,
        -0.05343229772180289,
        -0.05350231500789472,
        -0.05372045291250153,
        -0.05476698177174447,
        -0.05703198296877592,
        -0.06564211270312073,
        -0.20402325311116437,
    ]
    G01 = [
        -0.14231933511651038,
        0.025986057945535528,
        0.029539177458034853,
        0.030058485422939388,
        0.03017631224530606,
        0.03000892506339415,
        0.030138349209637504,
        0.030320028029790724,
        0.030409728630203577,
        0.030225772468422327,
        0.030230929709402016,
        0.03005213750273942,
        0.030026973858869387,
        0.030006324835211658,
        0.030200672651697718,
        0.030218479110198506,
        0.030065487820138664,
        0.02995143685044254,
        0.0297270915082943,
        0.025927056303236645,
        -0.1423024464339842,
    ]
    G11 = [
        -0.29661094594540366,
        -0.04911796353401069,
        -0.0378741966354535,
        -0.0350290191126261,
        -0.0343342431254659,
        -0.03384290669489775,
        -0.03393404347799437,
        -0.033844712776639224,
        -0.033848464816813306,
        -0.03373291386685952,
        -0.03367889717262016,
        -0.03384020922101584,
        -0.03375706956010235,
        -0.03359177935105092,
        -0.03382694667729254,
        -0.03398953343049558,
        -0.03418013226540666,
        -0.035120211184034654,
        -0.03785863983393572,
        -0.049133493067918144,
        -0.29653888503321446,
    ]
    G = np.array([[G00, G01], [G01, G11]])
    return np.einsum("ijt->tij", G)


def rho_ref() -> NDArray[np.float64]:
    return np.array(
        [
            [[2.31594398e-03, 3.17171093e-03], [3.17171093e-03, 4.34372426e-03]],
            [[2.31594403e-03, 3.17171099e-03], [3.17171099e-03, 4.34372433e-03]],
            [[2.31594409e-03, 3.17171107e-03], [3.17171107e-03, 4.34372444e-03]],
            [[2.31594416e-03, 3.17171120e-03], [3.17171120e-03, 4.34372460e-03]],
            [[2.31594434e-03, 3.17171139e-03], [3.17171139e-03, 4.34372483e-03]],
            [[2.31594456e-03, 3.17171167e-03], [3.17171167e-03, 4.34372518e-03]],
            [[2.31594489e-03, 3.17171208e-03], [3.17171208e-03, 4.34372571e-03]],
            [[2.31594538e-03, 3.17171271e-03], [3.17171271e-03, 4.34372649e-03]],
            [[2.31594611e-03, 3.17171363e-03], [3.17171363e-03, 4.34372765e-03]],
            [[2.31594721e-03, 3.17171502e-03], [3.17171502e-03, 4.34372939e-03]],
            [[2.31594884e-03, 3.17171709e-03], [3.17171709e-03, 4.34373198e-03]],
            [[2.31595127e-03, 3.17172017e-03], [3.17172017e-03, 4.34373585e-03]],
            [[2.31595489e-03, 3.17172477e-03], [3.17172477e-03, 4.34374162e-03]],
            [[2.31596030e-03, 3.17173163e-03], [3.17173163e-03, 4.34375023e-03]],
            [[2.31596838e-03, 3.17174186e-03], [3.17174186e-03, 4.34376308e-03]],
            [[2.31598042e-03, 3.17175712e-03], [3.17175712e-03, 4.34378224e-03]],
            [[2.31599838e-03, 3.17177990e-03], [3.17177990e-03, 4.34381083e-03]],
            [[2.31602518e-03, 3.17181387e-03], [3.17181387e-03, 4.34385347e-03]],
            [[2.31606517e-03, 3.17186456e-03], [3.17186456e-03, 4.34391709e-03]],
            [[2.31612481e-03, 3.17194017e-03], [3.17194017e-03, 4.34401200e-03]],
            [[2.31621379e-03, 3.17205296e-03], [3.17205296e-03, 4.34415359e-03]],
            [[2.31634652e-03, 3.17222123e-03], [3.17222123e-03, 4.34436482e-03]],
            [[2.31654453e-03, 3.17247225e-03], [3.17247225e-03, 4.34467992e-03]],
            [[2.31683992e-03, 3.17284671e-03], [3.17284671e-03, 4.34514999e-03]],
            [[2.31728054e-03, 3.17340529e-03], [3.17340529e-03, 4.34585122e-03]],
            [[2.31793778e-03, 3.17423851e-03], [3.17423851e-03, 4.34689729e-03]],
            [[2.31891810e-03, 3.17548132e-03], [3.17548132e-03, 4.34845772e-03]],
            [[2.32038016e-03, 3.17733492e-03], [3.17733492e-03, 4.35078535e-03]],
            [[2.32256040e-03, 3.18009916e-03], [3.18009916e-03, 4.35425720e-03]],
            [[2.32581095e-03, 3.18422069e-03], [3.18422069e-03, 4.35943530e-03]],
            [[2.33065574e-03, 3.19036429e-03], [3.19036429e-03, 4.36715728e-03]],
            [[2.33787337e-03, 3.19951843e-03], [3.19951843e-03, 4.37867078e-03]],
            [[2.34861861e-03, 3.21315032e-03], [3.21315032e-03, 4.39583276e-03]],
            [[2.36459888e-03, 3.23343256e-03], [3.23343256e-03, 4.42140391e-03]],
            [[2.38832702e-03, 3.26357077e-03], [3.26357077e-03, 4.45948117e-03]],
            [[2.42347430e-03, 3.30826982e-03], [3.30826982e-03, 4.51612841e-03]],
            [[2.47534318e-03, 3.37438236e-03], [3.37438236e-03, 4.60028366e-03]],
            [[2.55145523e-03, 3.47177984e-03], [3.47177984e-03, 4.72503701e-03]],
            [[2.66218973e-03, 3.61446383e-03], [3.61446383e-03, 4.90936441e-03]],
            [[2.82133142e-03, 3.82188056e-03], [3.82188056e-03, 5.18032166e-03]],
            [[3.04651389e-03, 4.12031395e-03], [4.12031395e-03, 5.57543339e-03]],
            [[3.36062362e-03, 4.54411886e-03], [4.54411886e-03, 6.14433877e-03]],
            [[3.79707285e-03, 5.13610778e-03], [5.13610778e-03, 6.94747625e-03]],
            [[4.39908758e-03, 5.94268194e-03], [5.94268194e-03, 8.04855150e-03]],
            [[5.12020524e-03, 6.97543723e-03], [6.97543723e-03, 9.50286725e-03]],
            [[5.62794442e-03, 7.99997830e-03], [7.99997830e-03, 1.13717850e-02]],
            [[7.17288658e-03, 7.72919062e-03], [7.72919062e-03, 1.37806425e-02]],
            [[1.27269961e-02, 2.96851784e-03], [2.96851784e-03, 1.59805311e-02]],
            [[1.12070268e-02, -1.93763463e-03], [-1.93763463e-03, 9.07687287e-03]],
            [[9.36985433e-05, 8.55191741e-05], [8.55191741e-05, 7.80723109e-05]],
            [[1.06520164e-01, -6.02845725e-02], [-6.02845725e-02, 6.74395908e-02]],
            [[9.08798166e-06, 1.12696347e-05], [1.12696347e-05, 1.39704085e-05]],
            [[1.19682229e-02, -1.37041287e-03], [-1.37041287e-03, 9.25285993e-03]],
            [[1.26763388e-02, 2.84822894e-03], [2.84822894e-03, 1.59730012e-02]],
            [[6.72739618e-03, 7.32276481e-03], [7.32276481e-03, 1.36895893e-02]],
            [[5.08741648e-03, 7.57169064e-03], [7.57169064e-03, 1.12691042e-02]],
            [[4.65850498e-03, 6.62318187e-03], [6.62318187e-03, 9.41645395e-03]],
            [[4.05723928e-03, 5.68371614e-03], [5.68371614e-03, 7.98461098e-03]],
            [[3.56372298e-03, 4.96014933e-03], [4.96014933e-03, 6.90394589e-03]],
            [[3.21216081e-03, 4.43270952e-03], [4.43270952e-03, 6.11691340e-03]],
            [[2.96043938e-03, 4.05601348e-03], [4.05601348e-03, 5.55989584e-03]],
            [[2.77961217e-03, 3.79091115e-03], [3.79091115e-03, 5.17324498e-03]],
            [[2.65138001e-03, 3.60667491e-03], [3.60667491e-03, 4.90818119e-03]],
            [[2.56190943e-03, 3.47993494e-03], [3.47993494e-03, 4.72790439e-03]],
            [[2.50030139e-03, 3.39341989e-03], [3.39341989e-03, 4.60591138e-03]],
            [[2.45826926e-03, 3.33469429e-03], [3.33469429e-03, 4.52362677e-03]],
            [[2.42976778e-03, 3.29498991e-03], [3.29498991e-03, 4.46824261e-03]],
            [[2.41051802e-03, 3.26821962e-03], [3.26821962e-03, 4.43101613e-03]],
            [[2.39755036e-03, 3.25020406e-03], [3.25020406e-03, 4.40601714e-03]],
            [[2.38882934e-03, 3.23809573e-03], [3.23809573e-03, 4.38923952e-03]],
            [[2.38297073e-03, 3.22996473e-03], [3.22996473e-03, 4.37798404e-03]],
            [[2.37903791e-03, 3.22450781e-03], [3.22450781e-03, 4.37043518e-03]],
            [[2.37639911e-03, 3.22084696e-03], [3.22084696e-03, 4.36537320e-03]],
            [[2.37462913e-03, 3.21839170e-03], [3.21839170e-03, 4.36197922e-03]],
            [[2.37344217e-03, 3.21674529e-03], [3.21674529e-03, 4.35970381e-03]],
            [[2.37264629e-03, 3.21564140e-03], [3.21564140e-03, 4.35817838e-03]],
            [[2.37211270e-03, 3.21490132e-03], [3.21490132e-03, 4.35715579e-03]],
            [[2.37175497e-03, 3.21440517e-03], [3.21440517e-03, 4.35647029e-03]],
            [[2.37151516e-03, 3.21407257e-03], [3.21407257e-03, 4.35601077e-03]],
            [[2.37135440e-03, 3.21384961e-03], [3.21384961e-03, 4.35570273e-03]],
            [[2.37124664e-03, 3.21370015e-03], [3.21370015e-03, 4.35549625e-03]],
            [[2.37117440e-03, 3.21359996e-03], [3.21359996e-03, 4.35535784e-03]],
            [[2.37112598e-03, 3.21353280e-03], [3.21353280e-03, 4.35526506e-03]],
            [[2.37109351e-03, 3.21348778e-03], [3.21348778e-03, 4.35520287e-03]],
            [[2.37107176e-03, 3.21345761e-03], [3.21345761e-03, 4.35516118e-03]],
            [[2.37105717e-03, 3.21343738e-03], [3.21343738e-03, 4.35513323e-03]],
            [[2.37104739e-03, 3.21342382e-03], [3.21342382e-03, 4.35511450e-03]],
            [[2.37104084e-03, 3.21341473e-03], [3.21341473e-03, 4.35510194e-03]],
            [[2.37103645e-03, 3.21340864e-03], [3.21340864e-03, 4.35509353e-03]],
            [[2.37103350e-03, 3.21340455e-03], [3.21340455e-03, 4.35508788e-03]],
            [[2.37103153e-03, 3.21340181e-03], [3.21340181e-03, 4.35508410e-03]],
            [[2.37103021e-03, 3.21339998e-03], [3.21339998e-03, 4.35508157e-03]],
            [[2.37102932e-03, 3.21339875e-03], [3.21339875e-03, 4.35507987e-03]],
            [[2.37102872e-03, 3.21339792e-03], [3.21339792e-03, 4.35507873e-03]],
            [[2.37102832e-03, 3.21339737e-03], [3.21339737e-03, 4.35507796e-03]],
            [[2.37102806e-03, 3.21339700e-03], [3.21339700e-03, 4.35507745e-03]],
            [[2.37102788e-03, 3.21339675e-03], [3.21339675e-03, 4.35507711e-03]],
            [[2.37102776e-03, 3.21339659e-03], [3.21339659e-03, 4.35507688e-03]],
            [[2.37102768e-03, 3.21339648e-03], [3.21339648e-03, 4.35507673e-03]],
            [[2.37102762e-03, 3.21339640e-03], [3.21339640e-03, 4.35507662e-03]],
            [[2.37102759e-03, 3.21339635e-03], [3.21339635e-03, 4.35507655e-03]],
        ]
    )
