# import pprint
import numpy as np
from numpy.typing import NDArray

import spmac.solver.single


def test_single():
    params = {
        "beta": 100,
        "num_omega": 101,
        "min_omega": -4,
        "max_omega": 4,
        "min_sv": 1e-12,
    }
    solver = spmac.solver.single.Solver(params, Gtau=Gtau())
    lambda_ = 1.0e-6
    opt = solver.solve_one(lambda_)
    rho = np.real(solver.predict_rho(opt.x[0]))
    # pprint.pprint(rho)
    np.testing.assert_array_almost_equal(rho, rho_ref())


def Gtau() -> NDArray[np.float64]:
    return np.array(
        [
            -0.5009185830163149,
            -0.11460955950709176,
            -0.09496510564707661,
            -0.08976507957336376,
            -0.08802566184479588,
            -0.08747828645503652,
            -0.08731758915737549,
            -0.08703412798103258,
            -0.08703304002585703,
            -0.08725392479435885,
            -0.08682132650718966,
            -0.08696178879748238,
            -0.08714508455520505,
            -0.08700879743383057,
            -0.08722750520452932,
            -0.08741026694170151,
            -0.08793924307964295,
            -0.08986482906318428,
            -0.0948204537218409,
            -0.11459603445343321,
            -0.5006439707065309,
        ]
    )


def rho_ref() -> NDArray[np.float64]:
    return np.array(
        [
            6.51453549e-03,
            6.51453562e-03,
            6.51453580e-03,
            6.51453608e-03,
            6.51453649e-03,
            6.51453711e-03,
            6.51453803e-03,
            6.51453940e-03,
            6.51454145e-03,
            6.51454451e-03,
            6.51454907e-03,
            6.51455587e-03,
            6.51456602e-03,
            6.51458116e-03,
            6.51460375e-03,
            6.51463745e-03,
            6.51468772e-03,
            6.51476271e-03,
            6.51487459e-03,
            6.51504148e-03,
            6.51529047e-03,
            6.51566190e-03,
            6.51621601e-03,
            6.51704263e-03,
            6.51827578e-03,
            6.52011536e-03,
            6.52285956e-03,
            6.52695311e-03,
            6.53305929e-03,
            6.54216714e-03,
            6.55575109e-03,
            6.57600848e-03,
            6.60621233e-03,
            6.65123411e-03,
            6.71831618e-03,
            6.81820701e-03,
            6.96681677e-03,
            7.18760226e-03,
            7.51493383e-03,
            7.99868794e-03,
            8.71012180e-03,
            9.74840114e-03,
            1.12451505e-02,
            1.33589817e-02,
            1.62376315e-02,
            1.98872312e-02,
            2.37857151e-02,
            2.58133364e-02,
            1.97457438e-02,
            2.22867070e-09,
            1.73996172e-01,
            1.30507849e-04,
            1.98657862e-02,
            2.57055521e-02,
            2.36058602e-02,
            1.97185073e-02,
            1.61063687e-02,
            1.32668155e-02,
            1.11855552e-02,
            9.71351015e-03,
            8.69308220e-03,
            7.99419490e-03,
            7.51911174e-03,
            7.19770961e-03,
            6.98095135e-03,
            6.83506476e-03,
            6.73700995e-03,
            6.67116337e-03,
            6.62697191e-03,
            6.59732561e-03,
            6.57744237e-03,
            6.56410943e-03,
            6.55516992e-03,
            6.54917662e-03,
            6.54515875e-03,
            6.54246530e-03,
            6.54065973e-03,
            6.53944939e-03,
            6.53863805e-03,
            6.53809419e-03,
            6.53772962e-03,
            6.53748525e-03,
            6.53732143e-03,
            6.53721163e-03,
            6.53713802e-03,
            6.53708868e-03,
            6.53705561e-03,
            6.53703344e-03,
            6.53701858e-03,
            6.53700862e-03,
            6.53700194e-03,
            6.53699746e-03,
            6.53699446e-03,
            6.53699245e-03,
            6.53699110e-03,
            6.53699020e-03,
            6.53698959e-03,
            6.53698919e-03,
            6.53698892e-03,
            6.53698873e-03,
            6.53698861e-03,
        ]
    )
